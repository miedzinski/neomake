Include: include/setup.vader

Execute (Hook execution gets logged):
  let maker = extend(neomake#utils#MakerFromCommand('echo done'), {
    \ 'errorformat': '%m'})

  Save g:neomake_tests_au_done
  augroup neomake_tests
    au User NeomakeFinished let g:neomake_tests_au_done = 1
  augroup END

  call neomake#Make(0, [maker])
  let make_id = neomake#GetStatus().last_make_id
  NeomakeTestsWaitForFinishedJobs

  AssertNeomakeMessage 'Skipping User autocmd NeomakeCountsChanged: no hooks.', 3
  AssertNeomakeMessage "Calling User autocmd NeomakeFinished with context: "
  \ ."{'jobinfo': 'â€¦', 'file_mode': 0, 'make_id': ".make_id."}.", 2
  AssertEqual g:neomake_tests_au_done, 1

Execute (NeomakeJobFinished):
  if NeomakeAsyncTestsSetup()
    let maker = extend(neomake#utils#MakerFromCommand('echo done; exit 7'), {
      \ 'errorformat': '%m'})
    call neomake#Make(0, [maker])
    let jobinfo = neomake#GetJobs()[-1]
    NeomakeTestsWaitForFinishedJobs
    AssertEqual g:neomake_test_jobfinished, [{'jobinfo': jobinfo}]
    AssertEqual jobinfo.exit_code, 7
    AssertEqual jobinfo.file_mode, 0
    AssertEqual jobinfo.bufnr, bufnr('%')
  endif

Execute (NeomakeJobStarted can renice process):
  if NeomakeAsyncTestsSetup()
    let maker = NeomakeTestsCommandMaker('nice-sleep', 'sleep 1')

    function! NeomakeTestJobStarted(context) abort
      AssertEqual keys(a:context), ['jobinfo']
      let pid = a:context.jobinfo.get_pid()
      call system(printf('renice 19 %d', pid))
    endfunction
    augroup neomake_tests
      au User NeomakeJobStarted call NeomakeTestJobStarted(g:neomake_hook_context)
    augroup END

    let job = neomake#Make(0, [maker])
    let pid = neomake#GetJob(job[0]).get_pid()

    " Prefer procfs, since 'ps' in busybox cannot select a single PID.
    let proc_stat = printf('/proc/%d/stat', pid)
    if filereadable(proc_stat)
      let niceness = split(readfile(proc_stat)[0])[18]
    else
      let niceness = substitute(system(printf('ps -o nice= %d', pid)), '\v\s+|\n', '', 'g')
    endif
    AssertEqual niceness, '19'

    NeomakeCancelJobs!
  endif
